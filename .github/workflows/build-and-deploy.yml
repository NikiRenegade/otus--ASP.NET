name: Сборка и деплой

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: P@$$w0rd
          POSTGRES_DB: HomeworkDockerDb
        ports:
          - 5432:5432
        options: >-
          --health-cmd "pg_isready -U postgres"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Клонировать репозиторий
        uses: actions/checkout@v4

      - name: Установить .NET SDK
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      - name: Восстановить зависимости
        run: dotnet restore ./Homeworks/EF/src/PromoCodeFactory.WebHost/PromoCodeFactory.WebHost.csproj

      - name: Собрать проект
        run: dotnet build ./Homeworks/EF/src/PromoCodeFactory.WebHost/PromoCodeFactory.WebHost.csproj -c Release --no-restore

      - name: Применить миграции
        run: |
          dotnet tool install --global dotnet-ef
          export PATH="$PATH:/home/runner/.dotnet/tools"
          dotnet ef database update --project Homeworks/EF/src/PromoCodeFactory.WebHost --context ApplicationDbContext
        env:
          ConnectionStrings__DefaultConnection: "Host=localhost;Port=5432;Database=HomeworkDockerDb;Username=postgres;Password=P@$$w0rd"

      - name: Собрать Docker-образ
        run: docker build -t promofactory-webhost -f ./Homeworks/EF/src/PromoCodeFactory.WebHost/Dockerfile ./Homeworks/EF/src

      - name: Проверить содержимое
        run: ls -R Homeworks/EF/src

      - name: Запустить контейнеры через Docker Compose
        working-directory: Homeworks/EF/src
        run: docker compose -f compose.yml up -d
